<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FileList_DeleteText" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="FileList_DeletingConfirmationText" xml:space="preserve">
    <value>Do you really want to delete it?</value>
  </data>
  <data name="FileList_EmptyDataText" xml:space="preserve">
    <value>No files found.</value>
  </data>
  <data name="FileList_FileNameText" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="FileList_SizeText" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="FileList_UpdatedWhenText" xml:space="preserve">
    <value>Date Modified</value>
  </data>
  <data name="ImageUpload_ClosePopupWindowButton_Text" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ImageUpload_FileNotExists" xml:space="preserve">
    <value>File not exists</value>
  </data>
  <data name="ImageUpload_FilePathIsEmpty" xml:space="preserve">
    <value>File path is empty</value>
  </data>
  <data name="ImageUpload_InvalidFileExtension" xml:space="preserve">
    <value>Invalid file extension</value>
  </data>
  <data name="ImageUpload_InvalidFileSize" xml:space="preserve">
    <value>Invalid file size</value>
  </data>
  <data name="ImageUpload_InvalidUrl" xml:space="preserve">
    <value>Invalid URL</value>
  </data>
  <data name="ImageUpload_NoImageLabel_Text" xml:space="preserve">
    <value>No Image</value>
  </data>
  <data name="ImageUpload_OpenLink_ToolTip" xml:space="preserve">
    <value>Click here to attach an image</value>
  </data>
  <data name="ImageUpload_UploadButton_Text" xml:space="preserve">
    <value>Upload Selected Image</value>
  </data>
  <data name="ImageUpload_UploadTypeList_FromMyComputerItem_Text" xml:space="preserve">
    <value>Get a file from &lt;b&gt;my computer&lt;/b&gt;</value>
  </data>
  <data name="ImageUpload_UploadTypeList_FromWebItem_Text" xml:space="preserve">
    <value>Get a file from &lt;b&gt;the web&lt;/b&gt;</value>
  </data>
  <data name="ImageUpload_UrlIsEmpty" xml:space="preserve">
    <value>URL is empty</value>
  </data>
  <data name="ResourceHandler_InvalidRequest" xml:space="preserve">
    <value>This is an invalid resource request.</value>
  </data>
  <data name="SimpleUpload_FileIsNotUploadedYet" xml:space="preserve">
    <value>This file is not uploaded yet</value>
  </data>
  <data name="SimpleUpload_InvalidFileExtension" xml:space="preserve">
    <value>Invalid file extension detected</value>
  </data>
  <data name="SimpleUpload_InvalidFileSize" xml:space="preserve">
    <value>Invalid file size detected</value>
  </data>
  <data name="SimpleUpload_InvalidMimeType" xml:space="preserve">
    <value>Invalid MIME type detected</value>
  </data>
  <data name="SimpleUpload_Title" xml:space="preserve">
    <value>File Attachments</value>
  </data>
  <data name="SimpleUpload_UploadControlsUniqueIdNotSpecified" xml:space="preserve">
    <value>The unique identifiers of the controls which upload the selected files are not specified. Please use the UploadControlsUniqueId property to assign a value.</value>
  </data>
  <data name="SimpleUpload_UploadControlUniqueIdNotFound" xml:space="preserve">
    <value>The control with UniqueID '{0}' is not found. Please check the UploadControlsUniqueId property's value.</value>
  </data>
  <data name="ImageUpload_PopupWindow_Title" xml:space="preserve">
    <value>Attach Image</value>
  </data>
  <data name="SimpleUpload_OpenLink_Text" xml:space="preserve">
    <value>Upload Files</value>
  </data>
  <data name="FileList_ViewAllAtOnceLink_Text" xml:space="preserve">
    <value>View all of these images at once</value>
  </data>
  <data name="SimpleUpload_ChangeModeToAdvanced" xml:space="preserve">
    <value>{0}MB for all files&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a title="If you have Flash 9 or greater enabled and your browser doesn't have ad-blocking plug-ins installed"&gt;Multi File Selector&lt;/a&gt;</value>
  </data>
  <data name="SimpleUpload_ChangeModeToBasic" xml:space="preserve">
    <value>{0}MB per file&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a&gt;Single File Selector&lt;/a&gt;</value>
  </data>
  <data name="SimpleUpload_TooManyFilesSelected" xml:space="preserve">
    <value>You have attempted to select too many files</value>
  </data>
  <data name="SimpleUpload_UploadButton_Text" xml:space="preserve">
    <value>Upload Files &amp; Close</value>
  </data>
  <data name="ImageUpload_ButtonSeparator_Text" xml:space="preserve">
    <value>or</value>
  </data>
  <data name="SimpleUpload_ProgressArea_Title" xml:space="preserve">
    <value>Please wait, file upload in progress...</value>
  </data>
</root>